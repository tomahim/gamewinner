@import url('https://fonts.googleapis.com/icon?family=Material+Icons');

$purple-dark: #08387b;
$purple-mid: #5356dd;
$orange: #e39b2f;
$gray: #dcdbdb;
$white: #fff;

* {
  box-sizing: border-box;
}

body {
  margin: 0;
  font-family: 'Arial', sans-serif;
  background-color: $purple-dark;
  color: $white;
}

.app {
  max-width: 420px;
  margin: auto;
  position: relative;
}

header {
  display: flex;
  justify-content: start; /* Keeps left items left, right items right */
  align-items: center;
  background-color: $purple-dark;
  padding: 16px;
  font-size: 18px;

  .back-button {
    display: flex;
    align-items: center;
  }

  .logo {
    width: 60px;
    height: auto;
    margin: 0 16px; /* Space between back button and title */
  }

  .page-title {
    margin: 0;
    margin-left: 50px;
  }

  .menu-icon,
  .filter-icon {
    font-size: 24px;
    color: $orange;
    cursor: pointer;
  }
}

.logo-home-container {
  position: relative;
  width: 100%;
  height: 350px; /* Set to desired height, e.g., 80% of original to crop */
  overflow: hidden; /* Hides the overflow to crop the image */
  
  img {
    width: 100%;
    height: 100%;
    object-fit: cover; /* Maintains aspect ratio, crops to fill container */
    object-position: center; /* Centers the image, adjust if needed */
  }
}

.game-picture {
  position: relative;
  img {
    width: 100%;
    height: 100%;
    object-fit: cover; /* Maintains aspect ratio, crops to fill container */
    object-position: center; /* Centers the image, adjust if needed */
  }
}

.game-meta {
  display: flex;
  align-items: center;
  gap: 8px;
  padding: 12px 16px 4px 16px;
  font-size: 14px;
  color: rgba($white, 0.85);

  .game-meta-icon {
    font-size: 18px;
    color: $orange;
  }

  .game-meta-text {
    text-transform: uppercase;
    letter-spacing: 0.08em;
    font-size: 12px;
    color: rgba($white, 0.6);
  }

  .game-meta-value {
    font-weight: 600;
    color: $white;
  }
}

.section-title {
  padding: 0 15px;
  font-size: 16px;
  color: $white;
}

// SCSS Variables (optional, but good practice for magic numbers)
$gap-size: 20px;
$stagger-offset: 50px; // How much to vertically offset the second column

.game-grid {
  
  // 1. Setup the grid container
  display: grid;
  grid-template-columns: 1fr 1fr; // Two equal-width columns
  gap: $gap-size; // Space between rows and columns
  
  margin: 65px 10px 150px 10px;

  .game-card {
    // 2. Styling for the individual card containers
    position: relative; // Needed if you want to position text/overlays inside
    overflow: hidden;
    border-radius: 15px; // Rounded corners from the design
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    aspect-ratio: 1; // Define the portrait shape of the cards
    
    // Ensure the image covers the container
    img {
      position: absolute;
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
    
    // 3. THE KEY: Apply the stagger to the second column items (2nd, 4th, 6th, etc.)
    &:nth-child(2n-1) {
      transform: translateY(-$stagger-offset); 
      // This lifts the card up, creating the offbeat/staggered effect.
    }

    .rank-tag {
      position: absolute;
      bottom: 8px;
      right: 8px;
      background-color: $orange;
      padding: 2px 6px;
      border-radius: 6px;
      font-size: 12px;
      font-weight: bold;
    }
  }
}

.bottom-nav {
  position: fixed;
  bottom: 0;
  width: 100%;
  max-width: 420px;
  display: flex;
  justify-content: space-around;
  background-color: $purple-mid;
  padding: 12px 0;

  .nav-item {
    font-size: 24px;
    color: $gray;

    &.active {
      color: $orange;
    }
  }
}

.fab {
  position: fixed;
  bottom: 70px;
  right: 24px;
  background-color: $orange;
  color: $white;
  padding: 16px;
  border-radius: 50%;
  font-size: 24px;
  box-shadow: 0 4px 6px rgba(0,0,0,0.3);
  cursor: pointer;
}

/**
 * Forms 
 */

.form-container {
  display: flex;
  height: 100vh;           /* Full viewport height */
  justify-content: center; /* Horizontally center */

  &.v-centered {
    flex-direction: column;  /* Stack items vertically */
    align-items: center;     /* Vertically center */
  }

  input, select {
      margin: 15px 0;
      display: block;
      width: 100%;
  }

  .react-datepicker-wrapper input {
    margin: 0;
  }
}

input, select {
  max-width: 190px;
  padding: 12px;
  border: none;
  border-radius: 4px;
  box-shadow: 2px 2px 7px 0 rgb(0, 0, 0, 0.2);
  outline: none;
  color: dimgray;
}

h1, h2 {
  text-align: center;
}

.error-message {
  color: #ff6666;
  font-weight: bold;
  text-align: center;
  margin-bottom: 15px;
}




.margin-bottom-80 {
  margin-bottom: 80px;
}

.no-data-container {
  margin-left: 50px;

  .no-data-image {
    width: 300px;
  }
}
  
.link-with-icon {
  display: flex;
  flex-direction: row; /* Optional, as row is default */
  align-items: center; /* Vertically centers items */
  justify-content: center; /* Horizontally centers items */
  gap: 8px;
  padding: 16px;
  text-align: center; /* Centers text within each flex item, if needed */
  font-size: 18px;
  color: $orange;
}